plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '4.2.0'
group = 'com.vincenthuto.forcesofreality' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'forcesofreality'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.4'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.
 
    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'forcesofreality'

            mods {
                forcesofreality {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'forcesofreality'
            mods {
                forcesofreality {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'forcesofreality'
            mods {
                forcesofreality {
                    source sourceSets.main
                }
            }
        }

      data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'forcesofreality', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                forcesofreality {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

 maven {
        url "https://www.cursemaven.com"
    }
  maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    // location of a maven mirror for JEI files, as a fallback
    name = "ModMaven"
    url = "https://modmaven.k-4u.nl"
  }
  flatDir {
      dir 'libs'
   }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.19.4-45.0.43'
     implementation fg.deobf("curse.maven:hutoslib-478643:${hutoslib_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
  compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
  runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-common:${jei_version}")
  runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
}


// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "forcesofreality",
                "Specification-Vendor"    : "forcesofrealitysareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "forcesofrealitysareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task srcJar(type: Jar) {
    from(sourceSets.main.output)
    classifier = 'srcs'
}
jar.finalizedBy('reobfJar')
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}
artifacts {
    archives sourcesJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
   	    artifact sourcesJar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
